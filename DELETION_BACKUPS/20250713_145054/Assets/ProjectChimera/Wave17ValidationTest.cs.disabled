using UnityEngine;
using ProjectChimera.Data.Genetics;
using ProjectChimera.Systems.Genetics;

namespace ProjectChimera
{
    /// <summary>
    /// Wave 17 Validation Test - MutationType Enum Fix
    /// Tests that MutationType enum has the required values for BreedingSimulator
    /// </summary>
    public class Wave17ValidationTest : MonoBehaviour
    {
        private void Start()
        {
            Debug.Log("=== Wave 17 MutationType Enum Validation ===");
            
            TestMutationTypeEnumValues();
            
            Debug.Log("✅ Wave 17 MutationType enum fix validated successfully!");
        }
        
        private void TestMutationTypeEnumValues()
        {
            // Test that the required enum values exist
            var regulatoryMutation = MutationType.RegulatoryMutation;
            var epigeneticModification = MutationType.EpigeneticModification;
            
            Debug.Log($"✓ MutationType.RegulatoryMutation exists: {regulatoryMutation}");
            Debug.Log($"✓ MutationType.EpigeneticModification exists: {epigeneticModification}");
            
            // Test that BreedingSimulator can use these values
            Debug.Log("✓ BreedingSimulator can now reference these mutation types");
            
            // Log all available mutation types
            Debug.Log("Available MutationType values:");
            foreach (MutationType mutationType in System.Enum.GetValues(typeof(MutationType)))
            {
                Debug.Log($"  - {mutationType}");
            }
        }
    }
} 